image: node:lts

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

variables:
  DEV_DOMAIN: https://static-website-2024-dev.surge.sh
  STAGING_DOMAIN: https://static-website-2024-staging.surge.sh
  PRODUCTION_DOMAIN: https://static-website-2024.surge.sh
  DEV_ENV: dev
  STAGING_ENV: staging
  PRODUCTION_ENV: production

stages:
  - build
  - test-build
  - deploy-dev
  - test-dev
  - deploy-staging
  - test-staging
  - deploy-production
  - test-production

.deploy_template: &deploy
  environment:
    name: $ENVIRONMENT
    url: $DOMAIN
  script:
    - npm install -g surge
    - surge --project ./public --domain $DOMAIN

.test_template: &test
  image: alpine
  environment:
    name: $ENVIRONMENT
    url: $DOMAIN
  script:
    - apk add curl
    - curl $DOMAIN | grep -q "Hello"

build webiste:
  stage: build
  only:
    - master
    - merge_requests
    - feature/*
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby build
  artifacts:
    paths:
      - ./public

test artifact:
  image: alpine
  only:
    - master
    - merge_requests
    - feature/*
  stage: test-build
  script:
    - grep -q "Gatsby" ./public/index.html

test website:
  stage: test-build
  only:
    - master
    - merge_requests
    - feature/*
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve &
    - sleep 5
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"

deploy website in dev:
  stage: deploy-dev
  only:
    - master
    - merge_requests
    - feature/*
  variables:
    DOMAIN: $DEV_DOMAIN
    ENVIRONMENT: $DEV_ENV
  <<: *deploy

test website in dev:
  stage: test-dev
  only:
    - master
    - merge_requests
    - feature/*
  variables:
    DOMAIN: $DEV_DOMAIN
    ENVIRONMENT: $DEV_ENV
  <<: *test

deploy website in staging:
  stage: deploy-staging
  only:
    - master
  variables:
    DOMAIN: $STAGING_DOMAIN
    ENVIRONMENT: $STAGING_ENV
  <<: *deploy

test website in staging:
  stage: test-staging
  only:
    - master
  variables:
    DOMAIN: $STAGING_DOMAIN
    ENVIRONMENT: $STAGING_ENV
  <<: *test

deploy website in production:
  stage: deploy-production
  only:
    - master
  when: manual
  allow_failure: false
  variables:
    DOMAIN: $PRODUCTION_DOMAIN
    ENVIRONMENT: $PRODUCTION_ENV
  <<: *deploy

test website in production:
  stage: test-production
  only:
    - master
  variables:
    DOMAIN: $PRODUCTION_DOMAIN
    ENVIRONMENT: $PRODUCTION_ENV
  <<: *test